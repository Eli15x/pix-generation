basePath: /
definitions:
  model.Invoice:
    properties:
      amount:
        type: number
      cnpjCliente:
        type: string
      emitido:
        type: string
      expira:
        type: string
      id:
        type: string
      idTransacao:
        type: integer
      invoiceID:
        type: string
      pago:
        type: string
      taxaPaga:
        type: boolean
      txId:
        type: string
      uuid:
        type: string
    type: object
  model.InvoiceCNPJRequest:
    properties:
      cnpj_cliente:
        example: "12345678000199"
        type: string
    type: object
  model.InvoiceDeleteRequest:
    properties:
      invoiceID:
        type: string
    type: object
  model.InvoiceIDRequest:
    properties:
      invoice_id:
        example: INV-123456
        type: string
    type: object
  model.InvoiceReceive:
    properties:
      amount:
        type: number
      cnpjCliente:
        type: string
      emitido:
        type: string
      expira:
        type: string
      idTransacao:
        type: integer
      pago:
        type: string
      taxaPaga:
        type: boolean
      txId:
        type: string
      uuid:
        type: string
    type: object
  model.User:
    properties:
      UpdatedAt:
        type: string
      acess_id:
        type: string
      client_id:
        type: string
      createdAt:
        type: string
      document:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      taxaFaltante:
        type: string
      taxaTotal:
        type: string
      user_id:
        type: string
    type: object
  model.UserDeleteRequest:
    properties:
      document:
        example: "12345678900"
        type: string
    type: object
  model.UserIDRequest:
    properties:
      user_id:
        example: 647a8f9c0bde123456789abc
        type: string
    type: object
  model.UserLoginRequest:
    properties:
      email:
        example: usuario@email.com
        type: string
      password:
        example: minhasenha123
        type: string
    type: object
host: localhost:9090
info:
  contact: {}
  description: API para controle de usuários e invoices com autenticação JWT.
  license:
    name: Konachse
  termsOfService: http://swagger.io/terms/
  title: Pix Generation API
  version: "1.0"
paths:
  /invoice:
    delete:
      consumes:
      - application/json
      description: Remove uma fatura específica
      parameters:
      - description: Dados da fatura
        in: body
        name: invoice
        required: true
        schema:
          $ref: '#/definitions/model.InvoiceDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Deleta fatura
      tags:
      - invoice
    post:
      consumes:
      - application/json
      description: Cria uma nova fatura a partir dos dados fornecidos
      parameters:
      - description: Dados da fatura
        in: body
        name: invoice
        required: true
        schema:
          $ref: '#/definitions/model.InvoiceReceive'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cria uma nova fatura (Invoice)
      tags:
      - invoice
  /invoice/{startDate}/{endDate}/:
    delete:
      consumes:
      - application/json
      description: Remove faturas com base no CNPJ e intervalo de datas
      parameters:
      - description: Data inicial (YYYY-MM-DD)
        in: path
        name: startDate
        required: true
        type: string
      - description: Data final (YYYY-MM-DD)
        in: path
        name: endDate
        required: true
        type: string
      - description: CNPJ do cliente
        in: body
        name: invoice
        required: true
        schema:
          $ref: '#/definitions/model.InvoiceCNPJRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Deleta faturas por data e CNPJ
      tags:
      - invoice
    post:
      consumes:
      - application/json
      description: Busca todas as faturas pelo CNPJ e por data de início e fim
      parameters:
      - description: Data inicial (YYYY-MM-DD)
        in: path
        name: startDate
        type: string
      - description: Data final (YYYY-MM-DD)
        in: path
        name: endDate
        type: string
      - description: CNPJ do cliente
        in: body
        name: invoice
        required: true
        schema:
          $ref: '#/definitions/model.InvoiceCNPJRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Invoice'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Busca faturas por CNPJ e intervalo de datas
      tags:
      - invoice
  /invoice/id/{id}:
    get:
      consumes:
      - application/json
      description: Busca uma fatura pelo ID
      parameters:
      - description: ID da fatura
        in: body
        name: invoice
        required: true
        schema:
          $ref: '#/definitions/model.InvoiceIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Invoice'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Busca fatura por ID
      tags:
      - invoice
  /login:
    post:
      consumes:
      - application/json
      description: Verifica se o e-mail e senha são válidos
      parameters:
      - description: E-mail e senha do usuário
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Valida usuário
      tags:
      - users
  /register:
    post:
      consumes:
      - application/json
      description: Cadastra um novo usuário
      parameters:
      - description: Dados do usuário
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cria um novo usuário
      tags:
      - users
  /user:
    delete:
      consumes:
      - application/json
      description: Remove um usuário do sistema
      parameters:
      - description: Dados do usuário a ser deletado
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Deleta um usuário
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retorna um usuário pelo ID
      parameters:
      - description: ID do usuário
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Busca um usuário por ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Edita os dados de um usuário existente
      parameters:
      - description: Dados atualizados
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: Usuário atualizado
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Atualiza um usuário
      tags:
      - users
  /users:
    get:
      consumes:
      - application/json
      description: Retorna uma lista de todos os usuários cadastrados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Lista todos os usuários
      tags:
      - users
swagger: "2.0"
